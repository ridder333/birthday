<?php

use yii\helpers\Html;
use yii\bootstrap\ActiveForm;

$this->title = 'Работа с датами';
?>
<div class="site-index">
    <div class="container">
        <h1>Работа с датами</h1>
        <h2>Задание</h2>
        <p>
            Необходимо написать класс для работы с кастомной датой WDate.<br>
            Представим такую ситуацию, что нам известно, что какой-то человек был рожден 21 сентября, но какого года, мы не знаем.<br>
            Соответственно, наш класс может принимать в конструктор строку следующих форматов:
        </p>
        <ul>
            <li>01:00:05 21.07.2017 (известная полная дата со временем)</li>
            <li>01:05 21.07.2017 (секунды неизвестны)</li>
            <li>01: 21.07.2017 (неизвестны минуты)</li>
            <li>21.07.2017 (только дата)</li>
            <li>07.2017 (известен месяц и год)</li>
            <li>2017 (известен год)</li>
            <li>01: (известен час)</li>
            <li>01:05 (известен час и минуты)</li>
            <li>01:05:17 (известно полностью время)</li>
        </ul>
         <p>
            Нужно иметь возможность получать дату целиком и по отдельности
            Также необходимо решить, как будет производиться сравнение двух дат. 
            И так же написать тест на сортировку выбран 5 дат для сравнения
            На создание даты, получение ее параметров и сравнение необходимо написать тест (с помощью phpunit или другого пакета).
            Можно использовать любой фреймворк для структуры. Важно придерживаться стиля кода этого фреймворка и давать понятные имена переменным.
            Результат залить на git и предоставить доступ
        </p>
        <p class="bold">Выберите в верхнем меню необходимый раздел для работы с датами</p>
    </div>
</div>
